#include <iostream>
#include <string>
using namespace std;

class chess
{
	int x;
	int y;
	string color;
public:
	chess() {};
	void vvod()
	{
		cin >> x >> y >> color;
		if (x > 7 || y > 7 || x < 0 || y < 0)
		{
			cout << " wedite coord ot 0 do 7 vkluchitelno" << endl;
			cin >> x >> y;
		}
	}
	void inc_x()
	{
		x++;
	}
	void dec_x()
	{
		x--;
	}
	void dec_y()
	{
		y--;
	}
	void inc_y()
	{
		y++;
	}
	int ret_x()
	{
		return x;
	}
	int ret_y()
	{
		return y;
	}
	void sdvig_x(int sdv)
	{
		x = sdv;
	}
	void sdvig_y(int sdvy)
	{
		y = sdvy;
	}
	virtual bool hod(bool hoda, int mas[8][8]) = 0;
};
class Peshka :public chess
{
public:
	Peshka() {};
	void vvod_for_peshka()
	{
		vvod();
	}
	virtual bool hod(bool hoda, int mas[8][8])
	{
		int n;
		if (hoda == false)
			if (mas[ret_x() + 1][ret_y() + 1] == 0 && mas[ret_x() + 1][ret_y() - 1] == 0)
			{
				if (ret_x() == 1)
				{
					if (mas[ret_x() + 1][ret_y()] == 0 && mas[ret_x() + 2][ret_y()] == 0)
					{
						cout << "dostupen hod v pered na 1 or 2 kletki" << endl;
						cout << "na skolko kletok vi hotite pohodit?" << endl;
						cin >> n;
						if (n == 1)
						{
							mas[ret_x() + 1][ret_y()] = 1;
							mas[ret_x()][ret_y()] = 0;
							inc_x();
							hoda = false;
							cout << "vi pohodili peshkoy na 1 kletky" << endl;
							cout << "pozicia peshki: " << ret_x() << ' ' << ret_y() << endl;
						}
						else
						{
							if (n == 2)
							{
								mas[ret_x() + 2][ret_y()] = 1;
								mas[ret_x()][ret_y()] = 0;
								inc_x();
								inc_x();
								hoda = false;
								cout << "vi pohodili peshkoy na 2 kletki" << endl;
								cout << "pozicia peshki: " << ret_x() << ' ' << ret_y() << endl;
							}
						}
					}
				}
				else
				{
					if (ret_x() < 7 && ret_x() > 1)
					{
						mas[ret_x() + 1][ret_y()] = 1;
						mas[ret_x()][ret_y()] = 0;
						inc_x();
						hoda = false;
						cout << "vi pohodili peshkoy na 1 kletky" << endl;
						cout << "pozicia peshki: " << ret_x() << ' ' << ret_y() << endl;
					}
				}
			}
			else
			{
				if (mas[ret_x() + 1][ret_y() + 1] != 0)
				{
					mas[ret_x() + 1][ret_y() + 1] = 1;
					mas[ret_x()][ret_y()] = 0;
					inc_x();
					inc_y();
					hoda = true;
					cout << "vi ubili vrazheskuy figuru" << endl;
					cout << "pozicia peshki: " << ret_x() << ' ' << ret_y() << endl;
				}
				if (mas[ret_x() + 1][ret_y() - 1] != 0)
				{
					mas[ret_x() + 1][ret_y() - 1] = 1;
					mas[ret_x()][ret_y()] = 0;
					inc_x();
					dec_y();
					hoda = true;
					cout << "vi ubili vrazheskuy figuru" << endl;
					cout << "pozicia peshki: " << ret_x() << ' ' << ret_y() << endl;
				}
			}
		return hoda;
	}
};
class Ladia :public chess
{
public:
	Ladia() {};
	void vvod_for_ladia()
	{
		vvod();
	}
	virtual bool hod(bool hoda, int mas[8][8])
	{
		char o;
		int n, px = 0, py = 0;
		if (hoda == false)
		{
			if (hoda == false)
			{
				for (int i = 0; i < 8; i++)
					for (int j = 0; j < 8; j++)
					{
						if (mas[i][j] == 1)
						{
							px = i;
							py = j;
						}
					}
				if (ret_y() == py && ret_x() != px)
				{
					mas[ret_x()][py] = 4;
					mas[ret_x()][ret_y()] = 0;
					sdvig_x(px);
					hoda = true;
					cout << "wi ubili vrazh figuru" << endl;
					cout << "pozicia ladyi: " << ret_x() << ' ' << ret_y() << endl;
				}
				if (ret_x() == px && ret_y() != py)
				{
					mas[px][ret_y()] = 4;
					mas[ret_x()][ret_y()] = 0;
					sdvig_y(py);
					hoda = true;
					cout << "wi ubili vrazh figuru" << endl;
					cout << "pozicia ladyi: " << ret_x() << ' ' << ret_y() << endl;
				}
				if (hoda == false)
				{
					cout << "po kakoy osi ladioy you want to go? " << endl;
					cin >> o;
					if (o == 'x')
					{
						mas[ret_x()][py] = 4;
						mas[ret_x()][ret_y()] = 0;
						sdvig_y(py);
						hoda = false;
						cout << "pozicia ladyi: " << ret_x() << ' ' << ret_y() << endl;
					}
					if (o == 'y')
					{
						cout << "Na kakyu pozitciu po y vi hotite smestitsia: na " << px - 1 << "?(1) na " << px << "? na(2) " << px + 1 << "?(3)" << endl;
						cin >> n;
						if (n == 1)
						{
							mas[px - 1][ret_y()] = 4;
							mas[ret_x()][ret_y()] = 0;
							sdvig_x(px - 1);
							hoda = false;
							cout << "pozicia ladyi: " << ret_x() << ' ' << ret_y() << endl;
						}
						if (n == 2)
						{
							mas[px][ret_y()] = 4;
							mas[ret_x()][ret_y()] = 0;
							sdvig_x(px);
							hoda = false;
							cout << "pozicia ladyi: " << ret_x() << ' ' << ret_y() << endl;
						}
						if (n == 3)
						{
							mas[px + 1][ret_y()] = 4;
							mas[ret_x()][ret_y()] = 0;
							sdvig_x(px + 1);
							hoda = false;
							cout << "pozicia ladyi: " << ret_x() << ' ' << ret_y() << endl;
						}
					}
				}
			}
		}
		return hoda;
	}
};
int main()
{
	int i, j;
	bool flag = false;
	Ladia lad;
	Peshka pesh;
	int arr[8][8];
	for (i = 0; i < 8; i++)
		for (j = 0; j < 8; j++)
			arr[i][j] = 0;
	pesh.vvod_for_peshka();
	lad.vvod_for_ladia();
	i = pesh.ret_x();
	j = pesh.ret_y();
	arr[i][j] = 1;
	i = lad.ret_x();
	j = lad.ret_y();
	arr[i][j] = 4;
	while (flag == false)
	{
		flag = pesh.hod(flag, arr);
		flag = lad.hod(flag, arr);
		cout << "flag= " << flag << endl;
	}
	system("pause");
	return 0;
}
