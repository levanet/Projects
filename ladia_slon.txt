#include <iostream>
#include <string>
using namespace std;

class chess
{
	int x;
	int y;
	string color;
public:
	chess() {};
	void vvod()
	{
		cin >> x >> y >> color;
		if (x > 7 || y > 7 || x < 0 || y < 0)
		{
			cout << " wedite coord ot 0 do 7 vkluchitelno" << endl;
			cin >> x >> y;
		}
	}
	void inc_x()
	{
		x++;
	}
	void dec_x()
	{
		x--;
	}
	void dec_y()
	{
		y--;
	}
	void inc_y()
	{
		y++;
	}
	int ret_x()
	{
		return x;
	}
	int ret_y()
	{
		return y;
	}
	void sdvig_x(int sdv)
	{
		x = sdv;
	}
	void sdvig_y(int sdvy)
	{
		y = sdvy;
	}
	virtual bool hod(bool hoda, int mas[8][8]) = 0;
};
class Ladia :public chess
{
public:
	Ladia() {};
	void vvod_for_ladia()
	{
		cout << "wedite coordinati ladii"<<endl;
		vvod();
	}
	virtual bool hod(bool hoda, int mas[8][8])
	{
		char o;
		int n, px = 0, py = 0;
		if (hoda == false)
		{
			if (hoda == false)
			{
				for (int i = 0; i < 8; i++)
					for (int j = 0; j < 8; j++)
					{
						if (mas[i][j] == 3)
						{
							px = i;
							py = j;
						}
					}
				if (ret_y() == py && ret_x() != px)
				{
					mas[ret_x()][py] = 4;
					mas[ret_x()][ret_y()] = 0;
					sdvig_x(px);
					hoda = true;
					cout << "wi ubili vrazh figuru" << endl;
					cout << "pozicia ladyi: " << ret_x() << ' ' << ret_y() << endl;
				}
				if (ret_x() == px && ret_y() != py)
				{
					mas[px][ret_y()] = 4;
					mas[ret_x()][ret_y()] = 0;
					sdvig_y(py);
					hoda = true;
					cout << "wi ubili vrazh figuru" << endl;
					cout << "pozicia ladyi: " << ret_x() << ' ' << ret_y() << endl;
				}
				if (hoda == false)
				{
					cout << "po kakoy osi ladioy you want to go? " << endl;
					cin >> o;
					if (o == 'x')
					{
						mas[ret_x()][py] = 4;
						mas[ret_x()][ret_y()] = 0;
						sdvig_y(py);
						hoda = false;
						cout << "pozicia ladyi: " << ret_x() << ' ' << ret_y() << endl;
					}
					if (o == 'y')
					{
						cout << "Na kakyu pozitciu po y vi hotite smestitsia: na " << px - 1 << "?(1) na " << px << "? na(2) " << px + 1 << "?(3)" << endl;
						cin >> n;
						if (n == 1)
						{
							mas[px - 1][ret_y()] = 4;
							mas[ret_x()][ret_y()] = 0;
							sdvig_x(px - 1);
							hoda = false;
							cout << "pozicia ladyi: " << ret_x() << ' ' << ret_y() << endl;
						}
						if (n == 2)
						{
							mas[px][ret_y()] = 4;
							mas[ret_x()][ret_y()] = 0;
							sdvig_x(px);
							hoda = false;
							cout << "pozicia ladyi: " << ret_x() << ' ' << ret_y() << endl;
						}
						if (n == 3)
						{
							mas[px + 1][ret_y()] = 4;
							mas[ret_x()][ret_y()] = 0;
							sdvig_x(px + 1);
							hoda = false;
							cout << "pozicia ladyi: " << ret_x() << ' ' << ret_y() << endl;
						}
					}
				}
			}
		}
		return hoda;
	}
};
class slon :public chess
{
public:
	slon() {};
	void vvod_for_slon()
	{
		cout << "wedite coordinati slona" << endl;
		vvod();
	}
	virtual bool hod(bool hoda, int mas[8][8])
	{
		int o;
		int n, px = 0, py = 0, i = 0;
		if (hoda == false)
		{
			for (int i = 0; i < 8; i++)
				for (int j = 0; j < 8; j++)
				{
					if (mas[i][j] == 4)
					{
						px = i;
						py = j;
					}
				}
			if (abs(ret_x() - px) == abs(ret_y() - py))
			{
				mas[px][py] = 3;
				mas[ret_x()][ret_y()] = 0;
				sdvig_x(px); sdvig_y(py);
				hoda = true;
				cout << "slon atakoval i ubil vrazheskyu figuru" << endl;
				cout << "pozicia slona: " << ret_x() << ' ' << ret_y() << endl;
			}
			if (hoda == false)
			{
				cout << "B kakyu storony you want to go? Vverh-pravo(1), vverh-levo(2), vniz-pravo(3), vniz-levo(4)" << endl;
				cin >> n;
				if (n == 1)
				{
					cout << "na skolko kletok wi poydete?" << endl;
					cin >> o;
					mas[ret_x() - o][ret_y() + o] = 3;
					mas[ret_x()][ret_y()] = 0;
					sdvig_x(ret_x() - o); sdvig_y(ret_y() + o);
					cout << "pozicia slona: " << ret_x() << ' ' << ret_y() << endl;
				}

				if (n == 2)
				{
					cout << "na skolko kletok wi poydete?" << endl;
					cin >> o;
					mas[ret_x() - o][ret_y() + o] = 3;
					mas[ret_x()][ret_y()] = 0;
					sdvig_x(ret_x() - o); sdvig_y(ret_y() - o);
					cout << "pozicia slona: " << ret_x() << ' ' << ret_y() << endl;
				}
				if (n == 3)
				{
					cout << "na skolko kletok wi poydete?" << endl;
					cin >> o;
					mas[ret_x() + o][ret_y() + o] = 3;
					mas[ret_x()][ret_y()] = 0;
					sdvig_x(ret_x() + o); sdvig_y(ret_y() + o);
					cout << "pozicia slona: " << ret_x() << ' ' << ret_y() << endl;
				}
				if (n == 4)
				{
					cout << "na skolko kletok wi poydete?" << endl;
					cin >> o;
					mas[ret_x() + o][ret_y() - o] = 3;
					mas[ret_x()][ret_y()] = 0;
					sdvig_x(ret_x() + o); sdvig_y(ret_y() - o);
					cout << "pozicia slona: " << ret_x() << ' ' << ret_y() << endl;
				}
				return hoda;
			}
		}
	}
};
int main()
{
	int i, j;
	bool flag = false;
	Ladia lad;
	slon slonk;
	int arr[8][8];
	for (i = 0; i < 8; i++)
		for (j = 0; j < 8; j++)
			arr[i][j] = 0;	
	lad.vvod_for_ladia();
	slonk.vvod_for_slon();
	i = slonk.ret_x();
	j = slonk.ret_y();
	arr[i][j] = 3;
	i = lad.ret_x();
	j = lad.ret_y();
	arr[i][j] = 4;
	while (flag == false)
	{
		flag = lad.hod(flag, arr);
		flag = slonk.hod(flag, arr);
		cout << "flag= " << flag << endl;
	}
	cout<<"Hello world in GitHub!!!!";
	system("pause");
	return 0;
}
